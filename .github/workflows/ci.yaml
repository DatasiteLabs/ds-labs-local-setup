name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          ignore_paths: >-
            test/test_helper/bats-assert
            test/test_helper/bats-support
            test/test_helper/bats-file

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-15]
        # Ready for future expansion with:
        # os: [macos-15, ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Bats and bats libs
      id: setup-bats
      uses: bats-core/bats-action@3.0.0
      with:
        bats-version: 1.11.1 
        support-path: ${{ github.workspace }}/test/test_helper/bats-support
        assert-path: ${{ github.workspace }}/test/test_helper/bats-assert
        file-path: ${{ github.workspace }}/test/test_helper/bats-file
    - name: bats
      shell: bash {0} # This enables pseudo-tty
      timeout-minutes: 5
      env:
        BATS_LIB_PATH: ${{ steps.setup-bats.outputs.lib-path }}
        TERM: xterm
      run: script -q /dev/null bats --filter-tags 'ci' test # Using script command to allocate a pseudo-tty
