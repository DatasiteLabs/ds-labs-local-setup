---
- name: Generate SSH Key
  ansible.builtin.shell:
    cmd: >
      ssh-keygen -t ed25519 -C {{ ds_email }}
      -f "{{ ansible_env.HOME }}/.ssh/id_ed25519" -q
      -P "{{ my_ssh_passphrase }}" && eval "$(ssh-agent -s)"
    creates: "{{ ansible_env.HOME }}/.ssh/id_ed25519"
  tags:
    - install
    - ssh
- name: Generate SSH Key
  ansible.builtin.shell:
    cmd: >
      ssh-keygen -t ed25519 -C {{ ds_email }}
      -f "{{ ansible_env.HOME }}/.ssh/id_gitlab" -q
      -P "{{ my_ssh_passphrase }}" && eval "$(ssh-agent -s)"
    creates: "{{ ansible_env.HOME }}/.ssh/id_gitlab"
  tags:
    - install
    - ssh
- name: Copy SSH Config
  ansible.builtin.file:
    src: "./files/.ssh/config"
    dest: "{{ ansible_env.HOME }}/.ssh/config"
    state: hard
    mode: '644'
  tags:
    - install
    - ssh
- name: Set authorized key taken from file for github
  ansible.posix.authorized_key:
    user: "{{ ansible_env.USER }}"
    state: present
    key: "{{ lookup('file', \"{{ ansible_env.HOME }}/.ssh/id_ed25519.pub\") }}"
  tags:
    - install
    - ssh
- name: Set authorized key taken from file for gitlab
  ansible.posix.authorized_key:
    user: "{{ ansible_env.USER }}"
    state: present
    key: "{{ lookup('file', \"{{ ansible_env.HOME }}/.ssh/id_gitlab.pub\") }}"
  tags:
    - install
    - ssh
# connect to github
- name: Read SSH public key to authorize
  ansible.builtin.command: cat "{{ lookup('env', 'HOME') }}/.ssh/id_ed25519.pub"
  register: ssh_pub_key
  changed_when: ssh_pub_key.rc != 0
- name: Authorize key with GitHub
  local_action:  # noqa deprecated-local-action
    module: github_key
    name: Access Key for {{ machine_hostname }}
    token: '{{ github_access_token }}'
    pubkey: '{{ ssh_pub_key.stdout }}'
